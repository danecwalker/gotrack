<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.umd.min.js"
    integrity="sha512-CQBWl4fJHWbryGE+Pc7UAxWMUMNMWzWxF4SQo9CgkJIN1kx6djDQZjh3Y8SZ1d+6I+1zze6Z7kHXO7q3UyZAWw=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="https://unpkg.com/htmx.org@1.9.10"
    integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC"
    crossorigin="anonymous"></script>
</head>

<body>

  <h1>Store</h1>
  <a href="/">Home</a>
  <canvas id="chart" style="width:100%; height: 600px;"></canvas>

  <div hx-get="/api/v1/stats?period=30d" hx-trigger="load" hx-swap="outerHTML">
    <h2>Page Views</h2>
    <h2>Visitors</h2>
    <h2>Bounces</h2>
    <h2>Avg Session Length</h2>
  </div>
  <script>
    (async function () {
      const res = await fetch('/api/v1/graph?period=24h');
      const d = await res.json();
      console.log(d);

      Chart.Tooltip.positioners.myCustomPositioner = function (elements, eventPosition) {
        // A reference to the tooltip model
        const tooltip = this;

        /* ... */

        return eventPosition
      };

      const data = {
        labels: d.visitors.map(function ({ x }) {
          return x;
        }).reverse(),
        datasets: [{
          label: 'Visitors',
          data: d.visitors,
          backgroundColor: [
            'rgb(167 139 250)',
          ],
          parsing: {
            xAxisKey: 'x',
            yAxisKey: 'y',
          },
        },
        {
          label: 'Views',
          data: d.page_views,
          backgroundColor: [
            'rgb(221 214 254)',
          ],
          borderColor: [
            'rgb(167 139 250)',
          ],
          borderWidth: 1,
          parsing: {
            xAxisKey: 'x',
            yAxisKey: 'y',
          },
        }],
      };

      const config = {
        type: 'bar',
        data: data,
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'top',
              align: 'end',
            },
            tooltip: {
              position: 'myCustomPositioner',
            }
          },
          scales: {
            y: {
              position: 'right',
              stacked: true,
              beginAtZero: true,
            },
            x: {
              stacked: true,
              ticks: {
                callback: function (value, index, ticks) {
                  // only show hour label for even index 7 PM
                  switch (d.period) {
                    case "24h":
                      return index % 1 === 0 ? new Date(this.getLabelForValue(value)).toLocaleDateString('en-US', {
                        hour: 'numeric',
                        minute: undefined,
                        hour12: true
                      }).split(", ")[1] : '';
                      break;

                    default:
                      return index % 2 === 0 ? new Date(this.getLabelForValue(value)).toLocaleDateString('en-US', {
                        month: 'short',
                        day: 'numeric',
                      }) : '';
                      break;
                  }
                }
              },
              grid: {
                display: false,
              }
            },
          },

        },
      };

      const myChart = new Chart("chart", config);
    })();
  </script>
</body>

</html>